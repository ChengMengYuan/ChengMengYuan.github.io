<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Android唤起手机地图(高德地图,百度地图,腾讯地图，腾讯地图网页)]]></title>
    <url>%2F2018%2F05%2F29%2FAndroid%E5%94%A4%E8%B5%B7%E6%89%8B%E6%9C%BA%E5%9C%B0%E5%9B%BE-%E9%AB%98%E5%BE%B7%E5%9C%B0%E5%9B%BE-%E7%99%BE%E5%BA%A6%E5%9C%B0%E5%9B%BE-%E8%85%BE%E8%AE%AF%E5%9C%B0%E5%9B%BE%EF%BC%8C%E8%85%BE%E8%AE%AF%E5%9C%B0%E5%9B%BE%E7%BD%91%E9%A1%B5%2F</url>
    <content type="text"><![CDATA[调用第三方地图软件 前言最近开发过程中,有个需求是需要调用手机内已经安装的地图软件进行导航,目前国内用户比较多的地图一共也只有三家,分别是 （1）高德地图（2）百度地图（3）腾讯地图 该如何调用这些APP呢?如果用户一个APP都没装又该怎么做呢? 判断是否安装了地图软件12345678910/** * 校验是否装了该应用 * * @param packageName 应用包名 * @return boolean 如果安装了则返回true */ private boolean isPackageInstalled(String packageName) &#123; return new File(Environment.getExternalStorageDirectory().getPath() + packageName) .exists(); &#125; 自动打开地图按照高德&gt;腾讯&gt;百度&gt;网页版的顺序分别尝试打开地图PS:百度的大部分软件我个人都不喜欢,所以将百度地图尽量放在最后调用。 12345678910111213141516171819202122232425262728293031/** * 启动导航 * * @param lat 纬度 * @param lng 经度 */ private void startToNavigation(String lat, String lng) &#123; String gaodeMap = "com.autonavi.minimap"; //高德地图包名：com.autonavi.minimap String tencentMap = "com.tencent.map"; //腾讯地图包名：com.tencent.map String BaiduMap = "com.baidu.BaiduMap"; //百度地图包名：com.baidu.BaiduMap if (isPackageInstalled(gaodeMap)) &#123; materialDialog.dismiss(); startGaodeMap(lat, lng); Log.d("isPackageInstalled", "安装了高德地图APP: "); &#125; else if (isPackageInstalled(tencentMap)) &#123; materialDialog.dismiss(); startTencentMap(lat, lng); //如果安装了腾讯地图APP Log.d("isPackageInstalled", "安装了腾讯地图APP: "); &#125; else if (isPackageInstalled(BaiduMap)) &#123; materialDialog.dismiss(); startBaiduMap(lat, lng); //如果安装了百度地图APP Log.d("isPackageInstalled", "安装了百度地图APP:"); &#125; else &#123; materialDialog.dismiss(); startHTMLMap(lat, lng); //如果什么地图都没安装,则打开网页版地图进行导航 Log.d("isPackageInstalled", "什么地图都没安装: "); &#125; &#125; 打开高德地图123456789101112131415161718192021222324252627282930/** * 打开高德地图进行导航 * * @param lat 目的地经纬度 * @param lng 目的地经纬度 */ private void startGaodeMap(String lat, String lng) &#123; //如果安装了高德地图APP Log.d("isPackageInstalled", "安装了高德地图APP: "); // 高德地图 try &#123; Intent intent = new Intent(); intent.setAction(Intent.ACTION_VIEW); intent.addCategory(Intent.CATEGORY_DEFAULT); //将功能Scheme以URI的方式传入data Uri uri = Uri.parse("androidamap://navi?sourceApplication=appname" + "&amp;poiname=fangheng" + "&amp;lat=" + lat + "&amp;lon=" + lng + "&amp;dev=1&amp;style=2"); intent.setData(uri); //启动该页面即可 context.startActivity(intent); &#125; catch (Exception e) &#123; e.printStackTrace(); startHTMLMap(lat, lng); &#125; &#125; 打开腾讯地图123456789101112131415161718192021222324/** * 打开腾讯地图进行导航 * * @param lat 目的地经纬度 * @param lng 目的地经纬度 */private void startTencentMap(String lat, String lng) &#123; //如果安装了腾讯地图APP Log.d("isPackageInstalled", "安装了腾讯地图APP: "); // 腾讯地图 try &#123; Intent intent = new Intent(); intent.setAction(Intent.ACTION_VIEW); intent.addCategory(Intent.CATEGORY_DEFAULT); //将功能Scheme以URI的方式传入data Uri uri = Uri.parse("qqmap://map/routeplan?type=drive&amp;tocoord=" + lat + "," + lng + "&amp;policy=0&amp;referer=baluche"); intent.setData(uri); //启动该页面即可 context.startActivity(intent); &#125; catch (Exception e) &#123; e.printStackTrace(); startHTMLMap(lat, lng); &#125;&#125; 打开百度地图12345678910111213141516171819202122232425262728/** * 打开百度地图进行导航 * * @param lat 目的地经纬度 * @param lng 目的地经纬度 */private void startBaiduMap(String lat, String lng) &#123; //如果安装了百度地图APP Log.d("isPackageInstalled", "安装了百度地图APP: "); // 百度地图 try &#123; Intent intent = new Intent(); intent.setAction(Intent.ACTION_VIEW); intent.addCategory(Intent.CATEGORY_DEFAULT); //将功能Scheme以URI的方式传入data Uri uri = Uri.parse("baidumap://map/direction?destination=" + lat + "," + lng + "&amp;mode=driving"); intent.setData(uri); //启动该页面即可 context.startActivity(intent); &#125; catch (Exception e) &#123; e.printStackTrace(); startHTMLMap(lat, lng); &#125;&#125; 打开网页地图1234567891011121314151617181920212223242526272829/** * 打开腾讯地图进行导航 * * @param lat 目的地经纬度 * @param lng 目的地经纬度 */ private void startTencentMap(String lat, String lng) &#123; //如果安装了腾讯地图APP Log.d("isPackageInstalled", "安装了腾讯地图APP: "); // 腾讯地图 try &#123; Intent intent = new Intent(); intent.setAction(Intent.ACTION_VIEW); intent.addCategory(Intent.CATEGORY_DEFAULT); //将功能Scheme以URI的方式传入data Uri uri = Uri.parse("qqmap://map/routeplan?type=drive&amp;tocoord=" + lat + "," + lng + "&amp;policy=0" + "&amp;referer=baluche"); intent.setData(uri); //启动该页面即可 context.startActivity(intent); &#125; catch (Exception e) &#123; e.printStackTrace(); startHTMLMap(lat, lng); &#125; &#125; 运行结果]]></content>
      <tags>
        <tag>地图</tag>
        <tag>调用</tag>
        <tag>第三方</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android6.0运行时权限管理]]></title>
    <url>%2F2018%2F05%2F26%2FAndroid6-0%E8%BF%90%E8%A1%8C%E6%97%B6%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%2F</url>
    <content type="text"><![CDATA[Android6.0动态权限最简单的解决方法 前言动态权限管理是Android6.0（B&gt;uild.VERSION_CODES.M =Api23）推出的，提醒用户当前APP所需&gt;要的权限，防止滥用。这些权限一般分为三种： （1）普通权限：直接manifest清单文件中写上注册就行了（2）危险权限：需要动态申请（3）特殊权限：一般用不上。 原声的动态权限管理很麻烦，代码也不够优雅，因此就有很多的动态权限管理库，比较出名一点的有： EasyPermissions RuntimePermission RxPermissions 相较于其他的权限管理库，RxPermissions的代码最为简洁，逻辑也更加清晰。 引入RxPermissions Github地址 关键代码12345678910111213141516171819202122232425262728293031RxPermissions rxPermissions = new RxPermissions(this); rxPermissions .requestEach(Manifest.permission.READ_PHONE_STATE,//读取电话 Manifest.permission.ACCESS_COARSE_LOCATION)//获取位置信息 .subscribe(permission -&gt; &#123; if (permission.granted) &#123; Log.d("rxPermissions", permission.name + "同意了"); switch (permission.name) &#123; case Manifest.permission.READ_PHONE_STATE: break; case Manifest.permission.ACCESS_COARSE_LOCATION: break; &#125; &#125; else if (permission.shouldShowRequestPermissionRationale) &#123; Log.d("rxPermissions", permission.name + "拒绝了"); switch (permission.name) &#123; case Manifest.permission.READ_PHONE_STATE: break; case Manifest.permission.ACCESS_COARSE_LOCATION: break; &#125; &#125; else &#123; switch (permission.name) &#123; case Manifest.permission.READ_PHONE_STATE: break; case Manifest.permission.ACCESS_COARSE_LOCATION: break; &#125; Log.d("rxPermissions", permission.name + "拒绝并不再提示了"); &#125; &#125;); 运行结果]]></content>
      <tags>
        <tag>权限管理</tag>
        <tag>Android6.0</tag>
        <tag>适配</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[第一篇博客]]></title>
    <url>%2F2018%2F05%2F25%2F%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[历经千辛万苦终于搭建好了我自己的博客网站，作为一个爱折腾的技术宅来说内心的满足感简直爆棚。希望接下来能把自己工作中的心得感悟都记录下来，方便以后查看。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F05%2F24%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <tags>
        <tag>测试</tag>
        <tag>HelloWorld</tag>
      </tags>
  </entry>
</search>
